# 1番上の階層、決まり文句のようなもの。
services:
  # 2番目の階層、作りたいコンテナを定義する。任意の名前をつけられる。
  php-app:
    # コンテナ名
    container_name: run-php-app
    # ビルドで使うdockerfileのディレクトリ
    build: ./app
    ports:
      - "18080:80"
    # ローカルPCとコンテナ間でディレクトリをバインド（同期）できる
    volumes:
      - ./app/src:/var/www/html/
    # 利用するネットワーク
    networks:
      - php-mysql-networks
    # 指定したサービスの後にコンテナを起動する
    depends_on:
      - php-db

  php-db:
    image: mysql:8.0
    container_name: php-db
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - MYSQL_DATABASE=test_db
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    networks:
      - php-mysql-networks

  php-adminer:
    container_name: adminer
    image: adminer:4.8.1
    ports:
      - 8081:8080
    networks:
      - php-mysql-networks
    depends_on:
      - php-db

# 任意のボリュームを作る(DBの永続化用)
volumes:
  mysql-data:
# 任意のネットワークを作る(わかりやすくするため)
networks:
  php-mysql-networks:
